

1.前端如何学习，应该看书，还是看网站，推荐几本好书和好的网站吧。
	css,js书各一本

	设计相关的书：设计模式、框架设计

	移动端
	
	Nodejs

	性能优化，http请求过程，浏览器渲染原理，webspeed，dp性能统计平台，navigation timing	


2.框架重要还是原生重要，用学习浏览器渲染原理吗？应该如何学习？不懂c++代码怎么办？

	都重要，开始学习用原生，接触到一定程度需要了解很多框架，了解各种框架的使用场景，是否需要框架，如何维护。是否对性能有要求，是否有表格等难以刷新的内容
	
	bootstrap，快速开发，样式统一。如果UE设计风格与bootstrap风格不符，不需要。

	如何取舍框架：视实际场景而定，框架擅长做什么，是否有优势，如何维护，升级，大家是否喜欢\学习去用。
	
	山寨一个类似框架，编码质量高，容错性高，适用场景广泛，容易学习适用。

	两~三年后：偏重重构业务，重构组件，系统交互，抽象出框架。

	T4:能独立完成功能，少出现bug。

	T5：发现系统存在的问题，采用系统化的手段解决问题，对业务非常熟悉。

	

	T5：

	能够优化、重构，产生一定的收益。有一定的亮点，有可扩展性和可重用性。

	技术性T5：性能优化，做一些系列工作，产生一定的收益。主动推动、存在能力。
		做框架：
		浏览器渲染：

	T6：精通一个或多个技术方向，培训一个T4到T5.	

1.常用跨域方法：jsonp

2.通常用什么技术，phonegap用吗？使用什么验证软件吗？

phonegap:能一套代码，跨平台，能生成app,能掉一用一些app的api

字体：像素

百分比和固定像素没有严格要求。

3.nodejs和angularjs有必要深入学习吗？Node如何入门，编写的代码如何分行

写js文件。

4.成体系。

举例：html5技术，在产品中用上

5.编写插件
父类：
创建、绘制、布局、派发、销毁、事件