1、DOCTYPE 影响 CSS 处理 
2、FF: 设置 padding 后， div 会增加 height 和 width， 但 IE 不会， 故需要用 !important 多设一个 height 和 width 
3、FF: 支持 !important， IE 则忽略， 可用 !important 为 FF 特别设置样式 
4、div 的垂直居中问题: vertical-align:middle; 将行距增加到和整个DIV一样高 line-height:200px; 然后插入文字，就垂直居中了。缺点是要控制内容不要换行 
5、在mozilla firefox和IE中的BOX模型解释不一致导致相差2px解决方法： 
div{margin:30px!important;margin:28px;} 
注意这两个margin的顺序一定不能写反，!important这个属性IE不能识别，但别的浏览器可以识别。所以在IE下其实解释成这样： 
div{maring:30px;margin:28px} 
重复定义的话按照最后一个来执行，所以不可以只写margin:XXpx!important; 
浏览器差异 
1、ul和ol列表缩进问题 
消除ul、ol等列表的缩进时，样式应写成：list-style:none;margin:0px;padding:0px; 
其中margin属性对IE有效，padding属性对FireFox有效。 
[注] 经验证，在IE中，设置margin:0px可以去除列表的上下左右缩进、空白以及列表编号或圆点，设置padding对样式没有影响；在 Firefox 中，设置margin:0px仅仅可以去除上下的空白，设置padding:0px后仅仅可以去掉左右缩进，还必须设置list- style:none才 能去除列表编号或圆点。也就是说，在IE中仅仅设置margin:0px即可达到最终效果，而在Firefox中必须同时设置margin:0px、 padding:0px以及list-style:none三项才能达到最终效果。 
2、CSS透明问题 
IE：filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)。 
FF：opacity:0.6。 
[注] 最好两个都写，并将opacity属性放在下面。 
3、CSS圆角问题 
IE：ie7以下版本不支持圆角。 
FF： -moz-border-radius:4px，或者-moz-border-radius-topleft:4px;-moz- border- radius-topright:4px;-moz-border-radius-bottomleft:4px;-moz- border- radius- bottomright:4px;。 
[注] 圆角问题是CSS中的经典问题，建议使用JQuery框架集来设置圆角，让这些复杂的问题留给别人去想吧。不过jQuery的圆角只看到支持整个区域的圆角，没有支持边框的圆角，不过这个边框的圆角可以通过一些简单的手段来实现，下次有机会介绍下。 
4、cursor:hand VS cursor:pointer 
问题说明：firefox不支持hand，但ie支持pointer ，两者都是手形指示。 
解决方法：统一使用pointer。 
5、字体大小定义不同 
对字体大小small的定义不同，Firefox中为13px，而IE中为16px，差别挺大。 
解决方法：使用指定的字体大小如14px。 
并列排列的多个元素（图片或者链接）的div和div之间，代码中的空格和回车在firefox中都会被忽略，而IE中却默认显示为空格（约3px）。 
6、CSS双线凹凸边框 
IE：border:2px outset;。 
FF： -moz-border-top-colors: #d4d0c8 white;-moz-border-left-colors: #d4d0c8 white;-moz-border-right-colors:#404040 #808080;-moz-border-bottom-colors:#404040 #808080; 
浏览器bug 
1、IE的双边距bug 
设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。 
解决方案：在这个div里面加上display:inline; 
例如： 
<#div id=”imfloat”> 
相应的css为 
以下为引用的内容： 
复制代码代码如下:
#IamFloat{ 
float:left; 
margin:5px;/*IE下理解为10px*/ 
display:inline;/*IE下再理解为5px*/ 
} 
#IamFloat{ 
float:left; 
margin:5px;/*IE下理解为10px*/ 
display:inline;/*IE下再理解为5px*/ 
} 
关 于CSS中的问题实在太多了，甚至同样的CSS定义在不同的页面标准中的显示效果都是不一样的。一个合乎发展的建议是，页面采用标准XHTML标准编写， 较少使用table，CSS定义尽量依照标准DOM，同时兼顾IE、Firefox、Opera等主流浏览器。很多情况下，FF和 Opera的CSS解释标准更贴近CSS标准，也更具有规范性。 
2、IE选择符空格BUG 
今天在给博客的段落样式设置首字符样式的时候发现，原来一个空格也可以使样式失效。 
请看以下代码： 

复制代码代码如下:
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="//www.w3.org/1999/xhtml"> 
<head> 
<title></title> 
<style type="text/css"> 
<!-- 
p{font-size:12px;} 
p:first-letter{font-size:300%} 
--> 
</style> 
</head> 
<body> 
<p>对于世界而言，你是一个人；但是对于某个人，你是他的整个世界。纵然伤心，也不要愁眉不展，因为你不知是谁会爱上你的笑容。</p> 
</body> 
</html> 
[/code] 

复制代码代码如下:
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="//www.w3.org/1999/xhtml"> 
<head> 
<title></title> 
<style type="text/css"> 
<!-- 
p{font-size:12px;} 
p:first-letter{font-size:300%} 
--> 
</style> 
</head> 
<body> 
<p>对于世界而言，你是一个人；但是对于某个人，你是他的整个世界。纵然伤心，也不要愁眉不展，因为你不知是谁会爱上你的笑容。</p> 
</body> 
</html> 
这 段代码对<p>的首字符样式定义在IE6上看是没有效果的（IE7没测试），而在p:first-letter和{font- size:300%}
加上空格，也就是p:first-letter {font-size:300%}后，显示就正常了。
但是同样的代码，在FireFox下看是正常的。按道理说，p:first- letter{font-size:300%}的写法是没错的。那么问题出在哪里呢？答案是伪类中的连字符”-”。
IE有个BUG，在处理伪类时，如果伪 类的名称中带有连字符”-”，伪类名称后面就得跟一个空格，不然样式的定义就无效。而在FF中，加不加空格都可以正常处理。

对css缩写的支持问题： 
不论是ie 还是ff对css的缩写都有一小点问题 
比如 
border: 0xp solid #fff;两个浏览器支持都没有问题 
但对于四个边的magin不同情况下，就不能用这种缩写了，无论是ie还是ff又会出现边界解释错误，而导致页面变形 
正确缩写： 
border-width:0px 1px 2px 3px; 
border-style:solid; 
border-color:#fff;
第二点是 ie对于css的magin padding 等默认值为0px，但ff却不一样，为了保持外观的统一性，即使padding为0你也要写上，以免ff在浏览中的错位。
 
IE与Firefox的CSS兼容大全
1.DOCTYPE 影响 CSS 处理 
2.FF: div 设置 margin-left, margin-right 为 auto 时已经居中, IE 不行 
3.FF: body 设置 text-align 时, div 需要设置 margin: auto(主要是 margin-left,margin-right) 方可居中 
4.FF: 设置 padding 后, div 会增加 height 和 width, 但 IE 不会, 故需要用 !important 多设一个 height 和 width
5.FF: 支持 !important, IE 则忽略, 可用 !important 为 FF 特别设置样式，值得注意的是，一定要将xxxx !important 这句放置在另一句之上 
6.div 的垂直居中问题: vertical-align:middle; 将行距增加到和整个DIV一样高 line-height:200px; 然后插入文字，就垂直居中了。缺点是要控制内容不要换行 
7.cursor: pointer 可以同时在 IE FF 中显示游标手指状， hand 仅 IE 可以 
8.FF: 链接加边框和背景色，需设置 display: block, 同时设置 float: left 保证不换行。参照 menubar, 给 a 和 menubar 设置高度是为了避免底边显示错位, 若不设 height, 可以在 menubar 中插入一个空格。
9.在mozilla firefox和IE中的BOX模型解释不一致导致相差2px解决方法：div{margin:30px!important;margin:28px;} 
注意这两个margin的顺序一定不能写反，据阿捷的说法!important这个属性IE不能识别，但别的浏览器可以识别。所以在IE下其实解释成这样：div{maring:30px;margin:28px} 
重复定义的话按照最后一个来执行，所以不可以只写margin:XXpx!important;
 
10.IE5 和IE6的BOX解释不一致 
IE5下div{width:300px;margin:0 10px 0 10px;} 
div 的宽度会被解释为300px-10px(右填充)-10px(左填充)最终div的宽度为280px，而在IE6和其他浏览器上宽度则是以 300px+10px(右填充)+10px(左填充)=320px来计算的。这时我们可以做如下修改div{width:300px!important;width :340px;margin:0 10px 0 10px} 
关于这个是什么我也不太明白，只知道IE5和firefox都支持但IE6不支持，如果有人理解的话，请告诉我一声，谢了！：）
 
11.ul标签在Mozilla中默认是有padding值的,而在IE中只有margin有值所以先定义ul{margin:0;padding:0;} 
就能解决大部分问题
注意事项：
 1、float的div一定要闭合。
例如：(其中floatA、floatB的属性已经设置为float:left;)<#div id=\"floatA\" > 
<#div id=\"floatB\" > 
<#div id=\"NOTfloatC\" > 
这里的NOTfloatC并不希望继续平移，而是希望往下排。 
这段代码在IE中毫无问题，问题出在FF。原因是NOTfloatC并非float标签，必须将float标签闭合。 
在<#div class=\"floatB\"> 
<#div class=\"NOTfloatC\"> 
之间加上<#div class=\"clear\"> 
这个div一定要注意声明位置，一定要放在最恰当的地方，而且必须与两个具有float属性的div同级，之间不能存在嵌套关系，否则会产生异常。 
并且将clear这种样式定义为为如下即可：.clear{ 
clear:both;}
此外，为了让高度能自动适应，要在wrapper里面加上overflow:hidden;

9.如何居中一个浮动元素?
设置容器的浮动方式为相对定位
然后确定容器的宽高 比如宽500 高 300 的层
然后设置层的外边距
Div{
Width:500px ;
height:300px; 
Margin: -150px 0 0 -250px;
position: absolute;
left:50%;
top:50%;
}



